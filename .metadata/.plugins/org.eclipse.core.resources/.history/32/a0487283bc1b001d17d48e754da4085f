#include "stm32f4xx.h"

#define TIM2_ENABLE		(1U<<0)
#define CR1_CEN			(1U<<0)
#define OC_TOGGLE		(1U<<4) | (1U<<5)
#define OC_ENABLE		(1U<<0)
#define AFR_5_TIM		(1U<<20)
#define GPIOAEN		(1U<<0)

void tim2_1Hz_init(void)
{
	//Enable clock to access tim2
	RCC->APB1ENR |= TIM2_ENABLE;
	//Set prescaler
	TIM2->PSC =1600 - 1; //16 000 000 / 1 600 = 10 000
	//Set ARR
	TIM2->ARR = 10000 - 1; // 10 000/ 10 000 = 1Hz
	//Clear counter
	TIM2->CNT = 0;
	//Enable timer
	TIM2->CR1 = CR1_CEN;
}

void tim2_PA5_output_compare(void)
{
	//ENABLE CLOCK ACCESS TO GPIOA
	RCC->AHB1ENR |= GPIOAEN;
	// PA5 MODE TO ALT FUNCTION

	GPIOA->MODER &= ~(1U<<10);
	GPIOA->MODER |= (1U<<11);

	GPIOA->AFR[0] |= AFR_5_TIM;

	//Enable clock to access tim2
	RCC->APB1ENR |= TIM2_ENABLE;
	//Set prescaler
	TIM2->PSC =1600 - 1; //16 000 000 / 1 600 = 10 000
	//Set ARR
	TIM2->ARR = 10000 - 1; // 10 000/ 10 000 = 1Hz

	//Set Output compare toggle mode
	TIM2->CCMR1 = OC_TOGGLE;
	//Enable Channel 1 of Timer 2 in compare mode
	TIM2->CCER |= OC_ENABLE;


	//Clear counter
	TIM2->CNT = 0;
	//Enable timer
	TIM2->CR1 = CR1_CEN;
}

void tim3_pa6_input_capture(void)
{
	//ENABLE CLOCK ACCESS TO GPIOA
	RCC->AHB1ENR |= GPIOAEN;
	GPIOA->MODER &= ~(1U<<12);
	GPIOA->MODER |= (1U<<13);
	// PA6 MODE TO ALT FUNCTION
	GPIOA->AFR[0] |= AFR_6_TIM;
	//Enable clock access to tim3
	RCC->APB1ENR |= TIM3_ENABLE;
	//set Prescaler
	TIM3->PSC = 16000 -1;
	//Set CH1 to INPUT capture
	TIM3->CCMR1 |= CCER_CC1S;
	//Set Ch1 to capture at rising edge
	//Enable tim3
	TIM3->CCER = IP_ENABLE;
	TIM3->CR1 = CR1_CEN;
}
