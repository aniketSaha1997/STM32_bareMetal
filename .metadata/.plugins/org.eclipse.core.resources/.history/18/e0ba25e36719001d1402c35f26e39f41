#include "stm32f4xx.h"

#define GPIOAEN 	(1U<<0)
#define UART2EN 	(1U<<17)


static uint16_t compute_uart_div(uint32_t periphClk, uint32_t BaudRate);
static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t periphClk, uint32_t BaudRate);

int main(void)
{
	RCC ->AHB1ENR |= GPIOCEN;
	RCC ->AHB1ENR |= GPIOAEN;


	GPIOA-> MODER |= (1U<<10);
	GPIOA-> MODER &= ~(1U<<11);

	GPIOA-> MODER &= ~(1U<<26);
	GPIOA-> MODER &= ~(1U<<27);


	while(1)
	{



	}
}

void uart2_tx_init(void){
	/********Configure uart gpio*********/

	RCC->AHB1ENR |= GPIOAEN;

	GPIOA-> MODER |= (1U<<5);
	GPIOA-> MODER &= ~(1U<<4);

	GPIOA->AFR[0] |= (1U<<8);
	GPIOA->AFR[0] |= (1U<<9);
	GPIOA->AFR[0] |= (1U<<10);
	GPIOA->AFR[0] &= ~(1U<<11);

	RCC->APB1ENR |= UART2EN;


}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t periphClk, uint32_t BaudRate)
{

	USARTx-> BRR = compute_uart_bd(periphClk,BaudRate);
}
static uint16_t compute_uart_div(uint32_t periphClk, uint32_t BaudRate)
{
	return ((periphClk + (BaudRate/2U))/BaudRate);
}
